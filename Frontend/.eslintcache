[{"C:\\Users\\user01\\react-assignment1\\src\\index.js":"1","C:\\Users\\user01\\react-assignment1\\src\\App.js":"2","C:\\Users\\user01\\react-assignment1\\src\\Table.js":"3","C:\\Users\\user01\\react-assignment1\\src\\Form.js":"4","C:\\Users\\user01\\Documents\\GitHub\\ToDoApp\\Frontend\\src\\index.js":"5","C:\\Users\\user01\\Documents\\GitHub\\ToDoApp\\Frontend\\src\\App.js":"6","C:\\Users\\user01\\Documents\\GitHub\\ToDoApp\\Frontend\\src\\Table.js":"7","C:\\Users\\user01\\Documents\\GitHub\\ToDoApp\\Frontend\\src\\Form.js":"8","C:\\Users\\user01\\Documents\\GitHub\\ToDoApp\\Frontend\\src\\Modal.js":"9"},{"size":167,"mtime":1609974705664,"results":"10","hashOfConfig":"11"},{"size":2017,"mtime":1612998723958,"results":"12","hashOfConfig":"11"},{"size":950,"mtime":1612998728843,"results":"13","hashOfConfig":"11"},{"size":1284,"mtime":1612999246618,"results":"14","hashOfConfig":"11"},{"size":169,"mtime":1614811043725,"results":"15","hashOfConfig":"16"},{"size":5491,"mtime":1614812377999,"results":"17","hashOfConfig":"16"},{"size":4672,"mtime":1614812378006,"results":"18","hashOfConfig":"16"},{"size":2828,"mtime":1614812249970,"results":"19","hashOfConfig":"16"},{"size":3066,"mtime":1614804925372,"results":"20","hashOfConfig":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"hqw4c6",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1q7fa39",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},"C:\\Users\\user01\\react-assignment1\\src\\index.js",[],["43","44"],"C:\\Users\\user01\\react-assignment1\\src\\App.js",[],"C:\\Users\\user01\\react-assignment1\\src\\Table.js",[],"C:\\Users\\user01\\react-assignment1\\src\\Form.js",[],"C:\\Users\\user01\\Documents\\GitHub\\ToDoApp\\Frontend\\src\\index.js",[],["45","46"],"C:\\Users\\user01\\Documents\\GitHub\\ToDoApp\\Frontend\\src\\App.js",["47"],"C:\\Users\\user01\\Documents\\GitHub\\ToDoApp\\Frontend\\src\\Table.js",["48","49"],"C:\\Users\\user01\\Documents\\GitHub\\ToDoApp\\Frontend\\src\\Form.js",["50"],"import React, { Component } from 'react'\r\n\r\nclass Form extends Component {\r\n     initialState = {\r\n            task: '',\r\n            desc: '',\r\n            date: \"\", \r\n            checked: false,\r\n            type: '',\r\n            priority: '',\r\n          }\r\n\r\n     state = this.initialState\r\n\r\n   handleChange = event => {\r\n        const { name, value } = event.target\r\n\r\n        this.setState({\r\n               [name]: value,\r\n             })\r\n   } \r\n\r\n    submitForm = () => {\r\n      let nPriority = parseInt(this.state.priority)\r\n      if (nPriority !== NaN && nPriority > 0 && nPriority <= 10) { // Check that the priority is valid\r\n        this.props.handleSubmit(this.state)\r\n        this.setState(this.initialState)\r\n     }\r\n     else {\r\n         alert(\"Priority must be a number from 1 to 10.\")\r\n     }\r\n   }\r\n\r\n   render() {\r\n        const { task, desc, priority, date } = this.state;\r\n\r\n        return (\r\n               <form>\r\n                 <label htmlFor=\"task\">Task</label>\r\n                 <input\r\n                   type=\"text\"\r\n                   name=\"task\"\r\n                   id=\"task\"\r\n                   value={task}\r\n                   onChange={this.handleChange} />\r\n\r\n                 <label htmlFor=\"desc\">Description</label>\r\n                 <input\r\n                   type=\"text\"\r\n                   name=\"desc\"\r\n                   id=\"desc\"\r\n                   value={desc}\r\n                   onChange={this.handleChange} />\r\n\r\n\t\t             <label htmlFor=\"date\">Due Date (optional)</label>\r\n                 <input\r\n                   type = \"datetime-local\"\r\n                   name = \"date\"\r\n                   id = \"date\"\r\n                   value={date}\r\n                   onChange={this.handleChange} />\r\n            \r\n                 <label htmlFor=\"type\">Type</label>\r\n                 <select name=\"type\" onChange={this.handleChange}>\r\n                   <option selected disabled>Please choose...</option>  <option name=\"type\" id=\"type\" value=\"School\">School</option>\r\n                   <option name=\"type\" id=\"type\" value=\"Work\">Work</option>\r\n                   <option name=\"type\" id=\"type\" value=\"Errand\">Errand</option>\r\n                   <option name=\"type\" id=\"type\" value=\"House Work\">House Work</option>\r\n                   <option name=\"type\" id=\"type\" value=\"Other\">Other</option>\r\n                 </select> \r\n\r\n                 <label htmlFor=\"priority\">Priority (Number 1-10)</label>\r\n                 <input\r\n                   type=\"text\"\r\n                   name=\"priority\"\r\n                   id=\"priority\"\r\n                   value={priority}\r\n                   onChange={this.handleChange} />\r\n                  <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\r\n               </form>\r\n             );\r\n   }\r\n\r\n}\r\n\r\nexport default Form\r\n","C:\\Users\\user01\\Documents\\GitHub\\ToDoApp\\Frontend\\src\\Modal.js",["51"],"import React, { Component } from 'react'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nclass MyModal extends Component {\r\n\r\n     initialState = {\r\n       task: '',\r\n       desc: '',\r\n       priority: ''\r\n     }\r\n     state = this.initialState\r\n\r\n\r\n   handleChange = event => {\r\n        const { name, value } = event.target\r\n\r\n        this.setState({\r\n               [name]: value,\r\n        })\r\n   }\r\n\r\n   // TODO: fix double click bug (if you edit the same task twice this breaks)\r\n   componentDidUpdate({_id}) { // if a new character is given, change the state\r\n    if (this.props.modalCharacter && (this.props.modalCharacter._id !== this.state._id)) {\r\n      this.setState({task: this.props.modalCharacter.task})\r\n      this.setState({desc: this.props.modalCharacter.desc})\r\n      this.setState({priority: this.props.modalCharacter.priority})\r\n      this.setState({_id: this.props.modalCharacter._id})\r\n    }\r\n   }\r\n\r\n   submitForm = () => {\r\n     let nPriority = parseInt(this.state.priority)\r\n     if (nPriority !== NaN && nPriority > 0 && nPriority <= 10) { // Check that the priority is valid\r\n      if (this.props.modalCharacter) {\r\n        var modChar = this.props.modalCharacter\r\n        modChar.task = this.state.task\r\n        modChar.desc = this.state.desc\r\n        modChar.priority = this.state.priority\r\n        this.props.handleModalSubmit(modChar)\r\n        }\r\n        // this.setState(this.initialState)\r\n     }\r\n     else {\r\n      alert(\"Priority must be a number from 1 to 10.\")\r\n     }\r\n    }\r\n\r\n    render = () => {\r\n        // const { task, desc, priority, show } = this.state;\r\n\r\n        return (\r\n         <Modal show={this.props.show} onHide={this.props.closeModal}>\r\n         <Modal.Header>\r\n          <Modal.Title>Edit task</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n                 <label htmlFor=\"task\">Task</label>\r\n                 <input\r\n                   type=\"text\"\r\n                   name=\"task\"\r\n                   id=\"task\"\r\n                   value={this.state.task}\r\n                   onChange={this.handleChange} />\r\n                 <label htmlFor=\"desc\">Description</label>\r\n                 <input\r\n                   type=\"text\"\r\n                   name=\"desc\"\r\n                   id=\"desc\"\r\n                   value={this.state.desc}\r\n                   onChange={this.handleChange} />\r\n                 <label htmlFor=\"priority\">Priority (Number 1-10)</label>\r\n                 <input\r\n                   type=\"text\"\r\n                   name=\"priority\"\r\n                   id=\"priority\"\r\n                   value={this.state.priority}\r\n                   onChange={this.handleChange} />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.props.closeModal}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.submitForm}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n        </Modal>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyModal\r\n",{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"52","replacedBy":"56"},{"ruleId":"54","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":167,"column":16,"nodeType":"60","endLine":167,"endColumn":52},{"ruleId":"61","severity":1,"message":"62","line":81,"column":20,"nodeType":"63","messageId":"64","endLine":81,"endColumn":22},{"ruleId":"61","severity":1,"message":"62","line":87,"column":20,"nodeType":"63","messageId":"64","endLine":87,"endColumn":22},{"ruleId":"65","severity":1,"message":"66","line":25,"column":11,"nodeType":"63","messageId":"67","endLine":25,"endColumn":28},{"ruleId":"65","severity":1,"message":"66","line":35,"column":10,"nodeType":"63","messageId":"67","endLine":35,"endColumn":27},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],["68"],["69"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","use-isnan","Use the isNaN function to compare with NaN.","comparisonWithNaN","no-global-assign","no-unsafe-negation"]